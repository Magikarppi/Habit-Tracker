{"version":3,"sources":["services/habits.ts","services/login.ts","services/signup.ts","components/AddHabit.tsx","utils.ts","components/Habit.tsx","images/Habit-tracker-Logged-empty.png","images/Habit-tracker-habit-more-info.png","images/Habit-tracker-Logged-habits-big-img.png","services/quote.ts","components/LoggedOutView.tsx","components/Home.tsx","components/HabitMoreInfo.tsx","globalStyle.ts","components/LoginSignUp.tsx","components/ErrSuccNotification.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["baseUrl","token","undefined","setToken","newToken","create","data","a","requestHeaders","Headers","append","fetch","method","body","JSON","stringify","headers","response","json","console","log","remove","habit","id","update","login","signup","SubmitBtn","styled","button","SubmitDiv","div","DivInput","CancelBtn","ErrorDiv","AddHabit","handleHabitSubmit","toggleHabitForm","inputRef","useRef","useEffect","current","focus","initialValues","habitName","validate","values","errors","length","username","onSubmit","setSubmitting","isSubmitting","type","name","placeholder","innerRef","data-cy","component","data-testid","onClick","consts","stringShortener","value","maxVal","maxLength","substr","concat","Div","StyledLink","Link","DoneBtn","DoneNotif","StreakDiv","Habit","handleCompletion","useState","currentStreak","setCurrentStreak","getCurrentStreak","completions","dateObj","today","Date","todayObj","thisDay","getDate","thisMonth","getMonth","thisYear","getFullYear","matchingDates","filter","completion","Object","keys","every","key","count","reverse","forEach","el","i","setUTCHours","to","style","fontSize","background","border","getQuote","ButtonWrapper","ParagraphSmall","p","ParagraphMed","ParagraphBig","Underline","span","Italic","GuideWrapper","GuidePairWrapper","ParagraphWrapper","imgStyle","width","height","borderRadius","LoggedOutView","quote","setQuote","quoteAuthor","setQuoteAuthor","fetchQuote","contents","quoteObject","quotes","author","mounted","fetchedQuoteObject","backgroundColor","borderTopLeftRadius","borderTopRightRadius","color","paddingBottom","src","LoggedEmptyImg","alt","LoggedHabitsImg","HabitMoreInfoImg","marginRight","HabitsDiv","Wrapper","NewHabitBtn","Home","loggedInUser","habitsToShow","showHabitForm","habits","map","DeleteBtn","WrapperChart","SuccessDaysWrapper","TotalDaysDiv","H1","h1","ParagraphNote","HabitMoreInfo","handleRemove","totalCompletedDays","completionDays","options","title","noDataPattern","colorAxis","minValue","colors","calendar","cellSize","cellColor","stroke","strokeOpacity","strokeWidth","focusedCellColor","monthLabel","fontName","bold","italic","monthOutlineColor","unusedMonthOutlineColor","underMonthSpace","underYearSpace","yearLabel","window","screen","chartType","loader","rootProps","GlobalStyle","createGlobalStyle","H3","h3","LoginSignUp","handleSignUpSubmit","handleLoginSubmit","formToShow","url","parts","split","lastIndexOf","getLastPart","location","href","password","SuccessMsgDiv","ErrorMsgDiv","Notification","successMessage","errorMessage","HeaderWrapper","HeaderSubWrapper","LoggedInDiv","LogOutBtn","Header","handleLogout","getPart","part","urlSecondToLast","urlLastPart","App","setHabitsToShow","setLoggedInUser","setErrorMessage","setSuccessMessage","redirect","setRedirect","setShowHabitForm","loggedUserJSON","localStorage","getItem","user","parse","signupData","setTimeout","error","includes","loginData","responseData","toUpperCase","setItem","clear","newHabit","confirm","e","date","updateHabit","ErrSuccNotification","exact","path","render","match","params","find","pathname","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e173e421.chunk.js","sourcesContent":["import { HabitType } from '../types';\r\n\r\nconst baseUrl = '/api/habits';\r\n\r\nlet token: undefined | string = undefined;\r\n\r\nexport const setToken = (newToken: string) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nexport const create = async (data: { name: string }) => {\r\n  if (!token) {\r\n    return;\r\n  }\r\n  try {\r\n    const requestHeaders: HeadersInit = new Headers();\r\n    requestHeaders.append('Content-Type', 'application/json');\r\n    requestHeaders.append('Authorization', token);\r\n    const response = await fetch(baseUrl, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: requestHeaders,\r\n      // headers: { 'Content-Type': 'application/json', Authorization: token },\r\n    });\r\n    return response.json();\r\n  } catch (exception) {\r\n    console.log(exception);\r\n  }\r\n};\r\n\r\nexport const remove = async (habit: HabitType) => {\r\n  try {\r\n    await fetch(`${baseUrl}/${habit.id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const update = async (habit: HabitType) => {\r\n  if (!token) {\r\n    return;\r\n  }\r\n  try {\r\n    const requestHeaders: HeadersInit = new Headers();\r\n    requestHeaders.append('Content-Type', 'application/json');\r\n    requestHeaders.append('Authorization', token);\r\n    const response = await fetch(`${baseUrl}/${habit.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(habit),\r\n      // headers: { 'Content-Type': 'application/json', Authorization: token },\r\n      headers: requestHeaders,\r\n    });\r\n    return response.json();\r\n  } catch (exception) {\r\n    console.log(exception);\r\n  }\r\n};\r\n","const baseurl = '/api/login';\r\n\r\nexport const login = async (data: { username: string; password: string }) => {\r\n  try {\r\n    const response = await fetch(baseurl, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    return response.json();\r\n  } catch (exception) {\r\n    console.log(exception);\r\n  }\r\n};\r\n","const baseUrl = '/api/users';\r\n\r\nexport const signup = async (data: { username: string; password: string }) => {\r\n  try {\r\n    const response = await fetch(baseUrl, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { AddHabitProps, HabitInputValue } from '../types';\r\n\r\nconst SubmitBtn = styled.button`\r\n  background: #fffba8;\r\n  &:hover {\r\n    background: #fff870;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst SubmitDiv = styled.div`\r\n  margin: auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst DivInput = styled.div`\r\n  margin: auto;\r\n  margin-bottom: 10px;\r\n  background: rgba(255, 255, 220, 0.5);\r\n  text-align: center;\r\n  width: 200px;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  color: black;\r\n`;\r\n\r\nconst CancelBtn = styled.button`\r\n  background: #cfccc2;\r\n  &:hover {\r\n    background: #ff711f;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst ErrorDiv = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst AddHabit = ({ handleHabitSubmit, toggleHabitForm }: AddHabitProps) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const initialValues = {\r\n    habitName: '',\r\n  };\r\n\r\n  const validate = (values: HabitInputValue) => {\r\n    const { habitName } = values;\r\n    const errors: any = {};\r\n\r\n    if (!habitName) {\r\n      errors.habitName = 'Please enter a habit name';\r\n    } else if (habitName.length >= 30) {\r\n      errors.username = 'Max length is 30 chars';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validate={(values) => validate(values)}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          handleHabitSubmit(values);\r\n        }}\r\n      >\r\n        {({ isSubmitting, errors }) => (\r\n          <Form>\r\n            <DivInput>\r\n              <Field\r\n                type=\"habitName\"\r\n                name=\"habitName\"\r\n                placeholder=\"Habit name\"\r\n                innerRef={inputRef}\r\n                data-cy=\"habit-input\"\r\n              />\r\n            </DivInput>\r\n            <ErrorMessage name=\"username\" component={ErrorDiv} />\r\n            <SubmitDiv>\r\n              <SubmitBtn\r\n                data-cy=\"habit-submit-btn\"\r\n                data-testid=\"habit-submit\"\r\n                type=\"submit\"\r\n              >\r\n                Add\r\n              </SubmitBtn>\r\n              <CancelBtn\r\n                data-cy=\"habit-form-close\"\r\n                data-testid=\"habit-form-close-btn\"\r\n                onClick={toggleHabitForm}\r\n              >\r\n                cancel\r\n              </CancelBtn>\r\n            </SubmitDiv>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddHabit;\r\n","import { LoggedInUser } from './types';\r\n\r\nexport const consts = {\r\n  appName: 'Simplify Success',\r\n};\r\n\r\nexport const dummyUser: LoggedInUser = {\r\n  username: 'DummyDude',\r\n  id: 'hasddhw4hww55',\r\n  habits: [\r\n    {\r\n      completions: [\r\n        {\r\n          thisDay: 5,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 6,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 7,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 8,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n      ],\r\n      id: 'sagassagsa',\r\n      name: 'Pelaa Heroesta',\r\n    },\r\n    {\r\n      completions: [\r\n        {\r\n          thisDay: 5,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 6,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 7,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 8,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n      ],\r\n      id: 'sagassag322sa',\r\n      name: 'A long walk',\r\n    },\r\n    {\r\n      completions: [\r\n        {\r\n          thisDay: 5,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 6,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 7,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 8,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n      ],\r\n      id: 'sagassaggagasgsa',\r\n      name: 'See a friend',\r\n    },\r\n  ],\r\n};\r\n\r\nexport const stringShortener = (value: string, maxVal?: number) => {\r\n  let maxLength = maxVal ? maxVal : 26;\r\n  if (value.length > maxLength) {\r\n    const truncatedString = value.substr(0, maxLength).concat('...');\r\n    return truncatedString;\r\n  } else {\r\n    return value;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Completion, HabitProps } from '../types';\r\nimport { stringShortener } from '../utils';\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid black;\r\n  height: 180px;\r\n  width: 90%;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: #000000;\r\n  width: 80%;\r\n`;\r\n\r\nconst DoneBtn = styled.button`\r\n  background: #fff870;\r\n  &:hover {\r\n    background: #a8ff36;\r\n  }\r\n  font-size: 0.9em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst DoneNotif = styled.div`\r\n  background: #73ff00;\r\n  color: black;\r\n  width: 50px;\r\n  font-size: 0.9em;\r\n  margin-top: 5px;\r\n  border: 2px solid #000000;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst StreakDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 2px solid #000000;\r\n  border-radius: 10px;\r\n  width: 50px;\r\n  height: 50px;\r\n  font-size: 0.9em;\r\n  color: black;\r\n`;\r\n\r\nconst Habit = ({ habit, handleCompletion }: HabitProps) => {\r\n  const [currentStreak, setCurrentStreak] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (habit) {\r\n      setCurrentStreak(getCurrentStreak(habit.completions));\r\n    }\r\n  }, [habit, handleCompletion]);\r\n\r\n  if (!habit) {\r\n    return null;\r\n  }\r\n\r\n  const findByMatchingDate = (completions: any, dateObj: any) => {\r\n    return completions.filter((completion: any) => {\r\n      return Object.keys(dateObj).every((key) => {\r\n        return completion[key] === dateObj[key];\r\n      });\r\n    });\r\n  };\r\n\r\n  const today = new Date();\r\n  const todayObj = {\r\n    thisDay: today.getDate(),\r\n    thisMonth: today.getMonth(),\r\n    thisYear: today.getFullYear(),\r\n  };\r\n\r\n  const matchingDates = findByMatchingDate(habit.completions, todayObj);\r\n\r\n  const getCurrentStreak = (completions: Completion[]) => {\r\n    let count = 0;\r\n    const transformToDateString = (completion: Completion) => {\r\n      return `${completion.thisYear}-${completion.thisMonth + 1}-${\r\n        completion.thisDay + 1\r\n      }`;\r\n    };\r\n    const completionsCopy = [...completions];\r\n    completionsCopy.reverse().forEach((el, i) => {\r\n      const today = new Date().setUTCHours(0, 0, 0, 0);\r\n      const currElDate = new Date(transformToDateString(el)).setUTCHours(\r\n        0,\r\n        0,\r\n        0,\r\n        0\r\n      );\r\n\r\n      const milliSecondsInADay = 86400000;\r\n      const daysPassed = i * milliSecondsInADay;\r\n      const daysPassedSinceCompletion = today - currElDate;\r\n\r\n      if (daysPassedSinceCompletion === daysPassed) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <Div>\r\n      <StyledLink data-cy=\"habit-link\" to={`/habits/${habit.id}`}>\r\n        {stringShortener(habit.name)}\r\n      </StyledLink>\r\n      {currentStreak && currentStreak > 1 ? (\r\n        <StreakDiv>\r\n          <p style={{ fontSize: '10px' }}>Streak</p>\r\n          {currentStreak}\r\n        </StreakDiv>\r\n      ) : (\r\n        <StreakDiv\r\n          style={{\r\n            background: 'none',\r\n            border: 'none',\r\n          }}\r\n        ></StreakDiv>\r\n      )}\r\n      {matchingDates.length > 0 ? (\r\n        <DoneNotif>Done!</DoneNotif>\r\n      ) : (\r\n        <div>\r\n          <DoneBtn data-cy=\"done-btn\" onClick={() => handleCompletion(habit)}>\r\n            Done for today!\r\n          </DoneBtn>\r\n        </div>\r\n      )}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Habit;\r\n","export default __webpack_public_path__ + \"static/media/Habit-tracker-Logged-empty.7775ea4c.png\";","export default __webpack_public_path__ + \"static/media/Habit-tracker-habit-more-info.6b1b7129.png\";","export default __webpack_public_path__ + \"static/media/Habit-tracker-Logged-habits-big-img.be3e0e6f.png\";","const baseUrl = 'https://quotes.rest/qod.json?category=inspire';\r\n\r\nexport const getQuote = async () => {\r\n  try {\r\n    const response = await fetch(baseUrl);\r\n    return response.json();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport LoggedEmptyImg from '../images/Habit-tracker-Logged-empty.png';\r\nimport HabitMoreInfoImg from '../images/Habit-tracker-habit-more-info.png';\r\nimport LoggedHabitsImg from '../images/Habit-tracker-Logged-habits-big-img.png';\r\nimport { getQuote } from '../services/quote';\r\n\r\nconst ButtonWrapper = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: #63006e;\r\n  font-weight: bold;\r\n  margin-right: 300px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 60px;\r\n  height: 30px;\r\n`;\r\n\r\nconst ParagraphSmall = styled.p`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  text-align: center;\r\n  width: 60%;\r\n`;\r\n\r\nconst ParagraphMed = styled.p`\r\n  font-size: 20px;\r\n  width: 60%;\r\n  text-align: center;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  color: #fffc37;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  @media (min-width: 767px) {\r\n    font-size: 40px;\r\n  }\r\n`;\r\n\r\nconst ParagraphBig = styled.p`\r\n  font-size: 30px;\r\n  width: 60%;\r\n  text-align: center;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  @media (min-width: 767px) {\r\n    font-size: 60px;\r\n  }\r\n`;\r\n\r\nconst Underline = styled.span`\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst Italic = styled.span`\r\n  font-style: italic;\r\n`;\r\n\r\nconst GuideWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background-color: teal;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst GuidePairWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst ParagraphWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 6%;\r\n  margin-top: 2%;\r\n`;\r\n\r\nconst imgStyle = {\r\n  width: 300,\r\n  height: 200,\r\n  borderRadius: 10,\r\n};\r\n\r\nconst LoggedOutView = () => {\r\n  const [quote, setQuote] = useState('');\r\n  const [quoteAuthor, setQuoteAuthor] = useState('');\r\n\r\n  const fetchQuote = async () => {\r\n    try {\r\n      const response = await getQuote();\r\n      if (!response.contents) {\r\n        return null;\r\n      }\r\n      const quoteObject = {\r\n        quote: response.contents.quotes[0].quote,\r\n        author: response.contents.quotes[0].author,\r\n      };\r\n      return quoteObject;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const getQuote = async () => {\r\n      const fetchedQuoteObject = await fetchQuote();\r\n      if (mounted) {\r\n        setQuote(fetchedQuoteObject?.quote);\r\n        setQuoteAuthor(fetchedQuoteObject?.author);\r\n      }\r\n    };\r\n    getQuote();\r\n\r\n    return function cleanup() {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ParagraphBig>\r\n        Did you know that the things that you do{' '}\r\n        <Underline>repeatedly</Underline> construct your identity and determine\r\n        the success that you are going to have?\r\n      </ParagraphBig>\r\n      <ParagraphMed>Start tracking your habits now!</ParagraphMed>\r\n      <ButtonWrapper>\r\n        <StyledLink data-cy=\"login-btn\" data-testid=\"login-btn\" to=\"/login\">\r\n          Login\r\n        </StyledLink>\r\n        <StyledLink data-cy=\"signup-btn\" data-testid=\"signup-btn\" to=\"/signup\">\r\n          Sign Up\r\n        </StyledLink>\r\n      </ButtonWrapper>\r\n      {quote ? (\r\n        <ParagraphWrapper>\r\n          <ParagraphSmall data-testid=\"quotePara\">\r\n            \"{<Italic>{quote}</Italic>}\" - {quoteAuthor}\r\n          </ParagraphSmall>\r\n        </ParagraphWrapper>\r\n      ) : (\r\n        <ParagraphWrapper>\r\n          <ParagraphSmall />\r\n        </ParagraphWrapper>\r\n      )}\r\n      <div\r\n        style={{\r\n          backgroundColor: 'teal',\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n        }}\r\n      >\r\n        <ParagraphMed style={{ color: 'white', paddingBottom: '20px' }}>\r\n          This is how Habit Tracker works:\r\n        </ParagraphMed>\r\n      </div>\r\n      <GuideWrapper>\r\n        <GuidePairWrapper>\r\n          <ParagraphSmall style={{ width: '150px' }}>\r\n            Log in and add a habit that you want to track\r\n          </ParagraphSmall>\r\n          <img\r\n            src={LoggedEmptyImg}\r\n            alt=\"Logged in view no habits\"\r\n            style={imgStyle}\r\n          />\r\n        </GuidePairWrapper>\r\n        <GuidePairWrapper>\r\n          <ParagraphSmall style={{ width: '150px' }}>\r\n            View all your habits and mark them as done\r\n          </ParagraphSmall>\r\n          <img\r\n            src={LoggedHabitsImg}\r\n            alt=\"Logged in view no habits\"\r\n            style={imgStyle}\r\n          />\r\n        </GuidePairWrapper>\r\n        <GuidePairWrapper>\r\n          <ParagraphSmall style={{ width: '150px' }}>\r\n            View completed days in a calendar and delete habit if necessary\r\n          </ParagraphSmall>\r\n          <img\r\n            src={HabitMoreInfoImg}\r\n            alt=\"Logged in view no habits\"\r\n            style={{ ...imgStyle, marginRight: '5px' }}\r\n          />\r\n        </GuidePairWrapper>\r\n      </GuideWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoggedOutView;\r\n","import styled from 'styled-components';\r\n\r\nimport { HomeProps } from '../types';\r\nimport AddHabit from './AddHabit';\r\nimport Habit from './Habit';\r\nimport LoggedOutView from './LoggedOutView';\r\n\r\nconst HabitsDiv = styled.div`\r\n  background: rgba(255, 255, 220, 0.8);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 300px;\r\n  padding: 10px;\r\n  margin: auto;\r\n  margin-bottom: 5%;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst ParagraphSmall = styled.p`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  text-shadow: 1px 1px;\r\n  text-align: center;\r\n  width: 60%;\r\n  padding: 0.25em 1em;\r\n`;\r\n\r\nconst ParagraphMed = styled(ParagraphSmall)`\r\n  font-size: 20px;\r\n  color: #fffc37;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  @media (min-width: 767px) {\r\n    font-size: 40px;\r\n  }\r\n`;\r\n\r\nconst ParagraphBig = styled(ParagraphSmall)`\r\n  font-size: 30px;\r\n  @media (min-width: 767px) {\r\n    font-size: 60px;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst NewHabitBtn = styled.button`\r\n  background: #f2f5b5;\r\n  &:hover {\r\n    background: #fff870;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Home = ({\r\n  loggedInUser,\r\n  habitsToShow,\r\n  handleHabitSubmit,\r\n  handleCompletion,\r\n  toggleHabitForm,\r\n  showHabitForm,\r\n}: HomeProps) => {\r\n  return loggedInUser ? (\r\n    <Wrapper>\r\n      {showHabitForm || loggedInUser.habits.length === 0 ? (\r\n        <div data-testid=\"habitForm-open-div\">\r\n          <AddHabit\r\n            handleHabitSubmit={handleHabitSubmit}\r\n            toggleHabitForm={toggleHabitForm}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <NewHabitBtn\r\n          data-cy=\"habit-form-open-btn\"\r\n          data-testid=\"habit-form-open-btn\"\r\n          onClick={toggleHabitForm}\r\n        >\r\n          Add a new habit\r\n        </NewHabitBtn>\r\n      )}\r\n      {habitsToShow.length > 0 ? (\r\n        <HabitsDiv data-testid=\"habit-div\" data-cy=\"habit-div\">\r\n          {habitsToShow.map((habit) => (\r\n            <Habit\r\n              key={habit.id}\r\n              habit={habit}\r\n              handleCompletion={handleCompletion}\r\n            />\r\n          ))}\r\n        </HabitsDiv>\r\n      ) : (\r\n        <>\r\n          <ParagraphBig>Add your first habit in the form above</ParagraphBig>\r\n          <ParagraphMed>Here are a few ideas if you need a spark:</ParagraphMed>\r\n          <ParagraphSmall>\"Physical exercise\"</ParagraphSmall>\r\n          <ParagraphSmall>\"Reading\"</ParagraphSmall>\r\n          <ParagraphSmall>\"Explore wikipedia\"</ParagraphSmall>\r\n          <ParagraphSmall>\"Practice magic tricks\"</ParagraphSmall>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  ) : (\r\n    <LoggedOutView />\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\nimport styled from 'styled-components';\r\nimport { HabitMoreInfoProps } from '../types';\r\nimport { stringShortener } from '../utils';\r\n\r\nconst DeleteBtn = styled.button`\r\n  background: #cfccc2;\r\n  &:hover {\r\n    background: #ff711f;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst WrapperChart = styled.div`\r\n  margin-left: 2%;\r\n  max-width: 100%;\r\n`;\r\n\r\nconst SuccessDaysWrapper = styled.div`\r\n  /* background: rgba(255, 255, 220, 0.8); */\r\n  width: 100px;\r\n  padding: 10px;\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst TotalDaysDiv = styled.div`\r\n  background: rgba(255, 234, 31, 0.8);\r\n  width: 170px;\r\n  padding: 10px;\r\n  margin: auto;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  color: black;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  color: rgb(255, 234, 31);\r\n  font-size: 2em;\r\n  text-align: center;\r\n`;\r\n\r\nconst ParagraphSmall = styled.p`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  text-shadow: 1px 1px;\r\n  text-align: center;\r\n  padding: 0.25em 1em;\r\n  color: black;\r\n`;\r\n\r\nconst ParagraphNote = styled.p`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  text-shadow: 1px 1px;\r\n  text-align: center;\r\n  padding: 0.25em 1em;\r\n  color: black;\r\n  font-size: 10px;\r\n  font-style: italic;\r\n`;\r\n\r\nconst HabitMoreInfo = ({ habit, handleRemove }: HabitMoreInfoProps) => {\r\n  if (!habit) {\r\n    return null;\r\n  }\r\n\r\n  const totalCompletedDays = habit.completions.length;\r\n\r\n  const completionDays = habit.completions.map((dateObj) => {\r\n    return [new Date(dateObj.thisYear, dateObj.thisMonth, dateObj.thisDay), 1];\r\n  });\r\n\r\n  let data: any = [\r\n    [\r\n      { type: 'date', id: 'Date' },\r\n      { type: 'number', id: 'Completions' },\r\n    ],\r\n  ];\r\n\r\n  const options = {\r\n    title: stringShortener(habit.name, 45),\r\n    noDataPattern: {\r\n      backgroundColor: '#000000',\r\n      color: '#000000',\r\n    },\r\n    colorAxis: {\r\n      minValue: 0,\r\n      colors: ['#00e5ff', '#73ff00'],\r\n    },\r\n    calendar: {\r\n      cellSize: 25,\r\n      cellColor: {\r\n        stroke: '#e3e3e3',\r\n        strokeOpacity: 0.5,\r\n        strokeWidth: 1,\r\n      },\r\n      focusedCellColor: {\r\n        stroke: '#d3362d',\r\n        strokeOpacity: 1,\r\n        strokeWidth: 1,\r\n      },\r\n      monthLabel: {\r\n        fontName: 'Arial',\r\n        fontSize: 12,\r\n        color: '#fad850',\r\n        bold: true,\r\n        italic: true,\r\n      },\r\n      monthOutlineColor: {\r\n        stroke: '#fad850',\r\n        strokeOpacity: 0.8,\r\n        strokeWidth: 3,\r\n      },\r\n      unusedMonthOutlineColor: {\r\n        stroke: '#bc5679',\r\n        strokeOpacity: 0.8,\r\n        strokeWidth: 2,\r\n      },\r\n      underMonthSpace: 16,\r\n      underYearSpace: 10,\r\n      yearLabel: {\r\n        fontName: 'Arial',\r\n        fontSize: 32,\r\n        color: 'white',\r\n        bold: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  data = data.concat(completionDays);\r\n\r\n  // Desktop view:\r\n  if (window.screen.width > 767) {\r\n    return (\r\n      <Wrapper>\r\n        <WrapperChart>\r\n          <Chart\r\n            width={'100%'}\r\n            height={350}\r\n            chartType=\"Calendar\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={data}\r\n            options={options}\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n        </WrapperChart>\r\n        <TotalDaysDiv>Times done: {totalCompletedDays}</TotalDaysDiv>\r\n        <div>\r\n          <DeleteBtn data-cy=\"delete-btn\" onClick={() => handleRemove(habit)}>\r\n            Delete\r\n          </DeleteBtn>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  } else {\r\n    //Mobile view:\r\n    return (\r\n      <Wrapper>\r\n        <H1>{stringShortener(habit.name, 45)}</H1>\r\n        <TotalDaysDiv>Times done: {totalCompletedDays}</TotalDaysDiv>\r\n        <SuccessDaysWrapper>\r\n          Dates of success:\r\n          {habit.completions.map((dateObj) => (\r\n            <ParagraphSmall\r\n              key={`${dateObj.thisDay} ${dateObj.thisMonth} ${dateObj.thisYear}`}\r\n            >{`${dateObj.thisDay} ${dateObj.thisMonth} ${dateObj.thisYear}`}</ParagraphSmall>\r\n          ))}\r\n        </SuccessDaysWrapper>\r\n        <div>\r\n          <DeleteBtn data-cy=\"delete-btn\" onClick={() => handleRemove(habit)}>\r\n            Delete\r\n          </DeleteBtn>\r\n        </div>\r\n        <ParagraphNote>\r\n          Please view on a bigger screen for more detailed view\r\n        </ParagraphNote>\r\n      </Wrapper>\r\n    );\r\n  }\r\n};\r\n\r\nexport default HabitMoreInfo;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n  min-height: 100%;\r\n  max-width: 100%;\r\n  overflow-x: none;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    min-height: 100%;\r\n    max-width: 100%;\r\n    background: linear-gradient(teal, purple);\r\n    font-family: Open-Sans, Helvetica, Sans-Serif;\r\n    color: #fafafa;\r\n    text-align: center;\r\n  }\r\n  a:link {\r\n    background: #fafafa;\r\n    &:hover {\r\n    background: #fffba8;\r\n  }\r\n  text-align: center;\r\n  vertical-align: center;\r\n  font-size: 1em;\r\n  margin: 0.5em;\r\n  padding: 1em 1em;\r\n  border: 2px solid black;\r\n  border-radius: 3px;\r\n  }\r\n  button {\r\n    background: #fafafa;\r\n  &:hover {\r\n    background: #fffba8;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  }\r\n  input {\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  color: black;\r\n  background: #fffba8;\r\n  border: none;\r\n  border-radius: 3px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  }\r\n  h1 {\r\n    font-size: 20px;\r\n    @media (min-width: 767px) {\r\n    font-size: 200%;\r\n    }\r\n  }\r\n  h2 {\r\n    font-size: 40px;\r\n  }\r\n  h3 {\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { LoginSignUpInputValues, LoginSignUpProps } from '../types';\r\n\r\nconst SubmitDiv = styled.div`\r\n  margin: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SubmitBtn = styled.button``;\r\n\r\nconst DivInput = styled.div`\r\n  margin: auto;\r\n  margin-bottom: 5px;\r\n  margin-top: 5px;\r\n  background: rgba(255, 255, 220, 0.5);\r\n  text-align: center;\r\n  width: 200px;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  color: black;\r\n`;\r\n\r\nconst H3 = styled.h3`\r\n  width: 200px;\r\n  margin: auto;\r\n  margin-bottom: 10px;\r\n  padding: 0.25em 1em;\r\n  text-align: center;\r\n`;\r\n\r\nconst ErrorDiv = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst LoginSignUp = ({\r\n  handleSignUpSubmit,\r\n  handleLoginSubmit,\r\n}: LoginSignUpProps) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const getLastPart = (url: string) => {\r\n    const parts = url.split('/');\r\n    return url.lastIndexOf('/') !== url.length - 1\r\n      ? parts[parts.length - 1]\r\n      : parts[parts.length - 2];\r\n  };\r\n\r\n  const formToShow = getLastPart(window.location.href);\r\n\r\n  const initialValues = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  const validate = (values: LoginSignUpInputValues) => {\r\n    const { username, password } = values;\r\n    const errors: any = {};\r\n\r\n    if (!username) {\r\n      errors.username = 'Username is required!';\r\n    } else if (username.length >= 12) {\r\n      errors.username = 'Max length is 12 characters';\r\n    } else if (username.length < 3) {\r\n      errors.username = 'Username should be at least 3 characters';\r\n    }\r\n\r\n    if (!password) {\r\n      errors.password = 'Password is required!';\r\n    } else if (password.length < 5) {\r\n      errors.password = 'Password should be at least 5 characters long';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  switch (formToShow) {\r\n    case 'signup':\r\n      return (\r\n        <div>\r\n          <H3>Sign Up</H3>\r\n          <div>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validate={(values) => validate(values)}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                handleSignUpSubmit(values);\r\n              }}\r\n            >\r\n              {({ isSubmitting, errors }) => (\r\n                <Form>\r\n                  <DivInput>\r\n                    <Field\r\n                      type=\"username\"\r\n                      name=\"username\"\r\n                      placeholder=\"Username\"\r\n                      innerRef={inputRef}\r\n                      data-cy=\"username-input\"\r\n                    />\r\n                  </DivInput>\r\n                  <ErrorMessage name=\"username\" component={ErrorDiv} />\r\n                  <DivInput>\r\n                    <Field\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      data-cy=\"password-input\"\r\n                    />\r\n                  </DivInput>\r\n                  <ErrorMessage name=\"password\" component={ErrorDiv} />\r\n                  <SubmitDiv>\r\n                    <SubmitBtn type=\"submit\" data-cy=\"submit-btn\">\r\n                      Submit\r\n                    </SubmitBtn>\r\n                  </SubmitDiv>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      );\r\n    case 'login':\r\n      return (\r\n        <div>\r\n          <H3>Login</H3>\r\n          <div>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validate={(values) => validate(values)}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                handleLoginSubmit(values);\r\n              }}\r\n            >\r\n              {({ isSubmitting, errors }) => (\r\n                <Form>\r\n                  <DivInput>\r\n                    <Field\r\n                      type=\"username\"\r\n                      name=\"username\"\r\n                      placeholder=\"Username\"\r\n                      innerRef={inputRef}\r\n                      data-cy=\"username-input\"\r\n                    />\r\n                  </DivInput>\r\n                  <ErrorMessage name=\"username\" component={ErrorDiv} />\r\n                  <DivInput>\r\n                    <Field\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      data-cy=\"password-input\"\r\n                    />\r\n                  </DivInput>\r\n                  <ErrorMessage name=\"password\" component={ErrorDiv} />\r\n                  <SubmitDiv>\r\n                    <SubmitBtn type=\"submit\" data-cy=\"submit-btn\">\r\n                      Submit\r\n                    </SubmitBtn>\r\n                  </SubmitDiv>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default LoginSignUp;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ErrorSuccessMsg } from '../types';\r\n\r\nconst SuccessMsgDiv = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  color: #000000;\r\n  background: #a1ff54;\r\n  font-size: 20px;\r\n  border-style: solid;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ErrorMsgDiv = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  color: #000000;\r\n  background: #ff711f;\r\n  font-size: 20px;\r\n  border-style: solid;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Notification = ({\r\n  successMessage,\r\n  errorMessage,\r\n}: {\r\n  successMessage: ErrorSuccessMsg;\r\n  errorMessage: ErrorSuccessMsg;\r\n}) => {\r\n  if (successMessage && !errorMessage) {\r\n    return <SuccessMsgDiv>{successMessage}</SuccessMsgDiv>;\r\n  } else if (errorMessage && !successMessage) {\r\n    return <ErrorMsgDiv>{errorMessage}</ErrorMsgDiv>;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { HeaderProps } from '../types';\r\nimport { consts } from '../utils';\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: 30%;\r\n  /* background-color: #383838; */\r\n`;\r\n\r\nconst HeaderSubWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 30%;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  /* font-size: 200%; */\r\n  color: #fffc37;\r\n  text-shadow: 1px 1px black;\r\n`;\r\n\r\nconst LoggedInDiv = styled.div`\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  font-size: 10px;\r\n  @media (min-width: 767px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst LogOutBtn = styled.button`\r\n  background: #fff870;\r\n  &:hover {\r\n    background: #85015d;\r\n  }\r\n  height: 30px;\r\n  width: 80px;\r\n  font-size: 0.6em;\r\n  @media (min-width: 767px) {\r\n    font-size: 0.9em;\r\n    margin: 1em;\r\n    padding: 0.25em 1em;\r\n    border: 2px solid #8f8d64;\r\n    border-radius: 3px;\r\n    text-align: center;\r\n    height: 30px;\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  background: #cfccc2;\r\n  &:hover {\r\n    background: darkgray;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`;\r\n\r\nconst Header = ({ loggedInUser, handleLogout }: HeaderProps) => {\r\n  const getPart = (part: 'last' | 'secondToLast', url: string) => {\r\n    const parts = url.split('/');\r\n    if (part === 'last') {\r\n      return url.lastIndexOf('/') !== url.length - 1\r\n        ? parts[parts.length - 1]\r\n        : parts[parts.length - 2];\r\n    } else if (part === 'secondToLast') {\r\n      return url.lastIndexOf('/') !== url.length - 1\r\n        ? parts[parts.length - 2]\r\n        : parts[parts.length - 3];\r\n    }\r\n  };\r\n\r\n  const urlSecondToLast = getPart('secondToLast', window.location.href);\r\n  const urlLastPart = getPart('last', window.location.href);\r\n\r\n  return loggedInUser ? (\r\n    <HeaderWrapper>\r\n      <HeaderSubWrapper>\r\n        {urlSecondToLast === 'habits' ? (\r\n          <StyledLink data-cy=\"back-btn\" to=\"/\">\r\n            Back\r\n          </StyledLink>\r\n        ) : null}\r\n      </HeaderSubWrapper>\r\n      <HeaderSubWrapper>\r\n        <H1>{consts.appName}</H1>\r\n      </HeaderSubWrapper>\r\n      <HeaderSubWrapper>\r\n        <LoggedInDiv>{loggedInUser.username} logged in</LoggedInDiv>\r\n        <LogOutBtn data-cy=\"logout-btn\" onClick={handleLogout}>\r\n          Log out\r\n        </LogOutBtn>\r\n      </HeaderSubWrapper>\r\n    </HeaderWrapper>\r\n  ) : (\r\n    <HeaderWrapper>\r\n      <HeaderSubWrapper>\r\n        {urlLastPart === 'login' || urlLastPart === 'signup' ? (\r\n          <StyledLink data-cy=\"back-btn\" to=\"/\">\r\n            Back\r\n          </StyledLink>\r\n        ) : null}\r\n      </HeaderSubWrapper>\r\n      <HeaderSubWrapper>\r\n        <H1>{consts.appName}</H1>\r\n      </HeaderSubWrapper>\r\n      <HeaderSubWrapper />\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport './App.css';\nimport { setToken, create, remove, update } from './services/habits';\nimport { login } from './services/login';\nimport { signup } from './services/signup';\nimport Home from './components/Home';\nimport HabitMoreInfo from './components/HabitMoreInfo';\nimport {\n  ErrorSuccessMsg,\n  HabitInputValue,\n  HabitNameField,\n  HabitsToShow,\n  HabitType,\n  LoggedInUser,\n  LoginSignUpInputValues,\n} from './types';\nimport GlobalStyle from './globalStyle';\nimport LoginSignUp from './components/LoginSignUp';\nimport ErrSuccNotification from './components/ErrSuccNotification';\nimport Header from './components/Header';\n\nconst App = () => {\n  const [habitsToShow, setHabitsToShow] = useState<HabitsToShow>([]);\n  const [loggedInUser, setLoggedInUser] = useState<LoggedInUser | null>(null);\n  const [errorMessage, setErrorMessage] = useState<ErrorSuccessMsg>('');\n  const [successMessage, setSuccessMessage] = useState<ErrorSuccessMsg>('');\n  const [redirect, setRedirect] = useState<string | null>(null);\n  const [showHabitForm, setShowHabitForm] = useState(false);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedHabitAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setLoggedInUser(user);\n      setHabitsToShow(user.habits);\n      setToken(user.token);\n    }\n  }, []);\n\n  const handleSignUpSubmit = async (values: LoginSignUpInputValues) => {\n    const { username, password } = values;\n    const signupData = {\n      username,\n      password,\n    };\n\n    if (signupData.password.length < 5) {\n      setErrorMessage('Password must be at least five (5) characters long');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 4000);\n      return;\n    }\n\n    try {\n      const response = await signup(signupData);\n      if (response.error) {\n        if (\n          response.error.includes(\n            'User validation failed: username: Error, expected `username` to be unique.'\n          )\n        ) {\n          setErrorMessage(\n            'Username is already taken. Please choose another username.'\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 4000);\n          return;\n        }\n\n        if (\n          response.error.includes(\n            'is shorter than the minimum allowed length'\n          ) &&\n          response.error.includes('username')\n        ) {\n          setErrorMessage(\n            'Username must be at least three (3) characters long'\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 4000);\n          return;\n        }\n\n        return;\n      }\n\n      if (response.username) {\n        setRedirect('/login');\n        setRedirect(null);\n        setSuccessMessage('A new user created! Please log in!');\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 4000);\n      }\n    } catch (exception) {\n      console.log('exception', exception);\n    }\n  };\n\n  const handleLoginSubmit = async (values: LoginSignUpInputValues) => {\n    const { username, password } = values;\n    const loginData = {\n      username,\n      password,\n    };\n    try {\n      const responseData = await login(loginData);\n\n      if (responseData.error) {\n        if (\n          responseData.error.toUpperCase() === 'INVALID USERNAME OR PASSWORD'\n        ) {\n          setErrorMessage('Wrong username or password');\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 4000);\n        }\n      }\n\n      if (responseData.username) {\n        window.localStorage.setItem(\n          'loggedHabitAppUser',\n          JSON.stringify(responseData)\n        );\n        setToken(responseData.token);\n        setLoggedInUser(responseData);\n        setHabitsToShow(responseData.habits);\n        setRedirect('/');\n        setRedirect(null);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleLogout = () => {\n    window.localStorage.clear();\n    setLoggedInUser(null);\n    setHabitsToShow([]);\n    setRedirect('/');\n    setRedirect(null);\n  };\n\n  const handleHabitSubmit = async (values: HabitInputValue) => {\n    const { habitName } = values;\n    try {\n      const newHabit = {\n        name: habitName,\n      };\n\n      const responseData = await create(newHabit);\n\n      if (responseData.error) {\n        if (\n          responseData.error.includes(\n            'is shorter than the minimum allowed length'\n          )\n        ) {\n          setErrorMessage(\n            'Minimum length for a habit name is two (2) characters.'\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 4000);\n          return;\n        }\n        return;\n      }\n\n      if (responseData.name && loggedInUser) {\n        setHabitsToShow([...habitsToShow, responseData]);\n        loggedInUser.habits = loggedInUser.habits.concat(responseData);\n        setShowHabitForm(false);\n        window.localStorage.setItem(\n          'loggedHabitAppUser',\n          JSON.stringify(loggedInUser)\n        );\n      }\n    } catch (exception) {\n      console.log(exception);\n    }\n  };\n\n  const toggleHabitForm = () => {\n    setShowHabitForm(!showHabitForm);\n  };\n\n  const handleRemove = async (habit: HabitType) => {\n    if (window.confirm(`Do you want to delete habit: ${habit.name}?`)) {\n      try {\n        await remove(habit);\n        setHabitsToShow(habitsToShow.filter((e) => e.id !== habit.id));\n        if (loggedInUser) {\n          loggedInUser.habits = loggedInUser.habits.filter(\n            (e) => e.id !== habit.id\n          );\n          window.localStorage.setItem(\n            'loggedHabitAppUser',\n            JSON.stringify(loggedInUser)\n          );\n          setSuccessMessage('Habit deleted');\n          setTimeout(() => {\n            setSuccessMessage(null);\n          }, 4000);\n          setRedirect('/');\n          setRedirect(null);\n        }\n      } catch (exception) {\n        console.log(exception);\n        setErrorMessage('Habit deletion failed');\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 4000);\n      }\n    }\n  };\n\n  const handleCompletion = async (habit: HabitType) => {\n    if (!loggedInUser) {\n      return setErrorMessage('User not logged in');\n    }\n    const date = new Date();\n    const thisDay = date.getDate();\n    const thisMonth = date.getMonth();\n    const thisYear = date.getFullYear();\n\n    const todayObj = {\n      thisDay,\n      thisMonth,\n      thisYear,\n    };\n\n    const updateHabit = {\n      ...habit,\n      completions: habit.completions.concat(todayObj),\n    };\n\n    try {\n      const responseData = await update(updateHabit);\n      setHabitsToShow(\n        habitsToShow.map((e) => (e.id === responseData.id ? responseData : e))\n      );\n      loggedInUser.habits = loggedInUser.habits.map((e) =>\n        e.id === responseData.id ? responseData : e\n      );\n      window.localStorage.setItem(\n        'loggedHabitAppUser',\n        JSON.stringify(loggedInUser)\n      );\n      setSuccessMessage('Completion added!');\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 4000);\n    } catch (error) {\n      console.log(error);\n      setErrorMessage('Adding completion failed.');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 4000);\n    }\n  };\n\n  const habitById = (id: string) =>\n    habitsToShow.find((habit) => habit.id === id);\n\n  return (\n    <div>\n      <GlobalStyle />\n      <ErrSuccNotification\n        errorMessage={errorMessage}\n        successMessage={successMessage}\n      />\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <>\n                <Header\n                  loggedInUser={loggedInUser}\n                  handleLogout={handleLogout}\n                />\n                <Home\n                  habitsToShow={habitsToShow}\n                  handleCompletion={handleCompletion}\n                  toggleHabitForm={toggleHabitForm}\n                  showHabitForm={showHabitForm}\n                  loggedInUser={loggedInUser}\n                  handleHabitSubmit={handleHabitSubmit}\n                />\n              </>\n            )}\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            render={() =>\n              redirect ? (\n                <Redirect to={redirect} />\n              ) : (\n                <>\n                  <Header\n                    loggedInUser={loggedInUser}\n                    handleLogout={handleLogout}\n                  />\n                  <LoginSignUp\n                    handleLoginSubmit={handleLoginSubmit}\n                    handleSignUpSubmit={handleSignUpSubmit}\n                  />\n                </>\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={() =>\n              redirect ? (\n                <Redirect to={redirect} />\n              ) : (\n                <>\n                  <Header\n                    loggedInUser={loggedInUser}\n                    handleLogout={handleLogout}\n                  />\n                  <LoginSignUp\n                    handleLoginSubmit={handleLoginSubmit}\n                    handleSignUpSubmit={handleSignUpSubmit}\n                  />\n                </>\n              )\n            }\n          />\n          <Route\n            path=\"/habits/:id\"\n            render={({ match }) =>\n              redirect ? (\n                <Redirect to={redirect} />\n              ) : (\n                <>\n                  <Header\n                    loggedInUser={loggedInUser}\n                    handleLogout={handleLogout}\n                  />\n                  <HabitMoreInfo\n                    habit={habitById(match.params.id)}\n                    handleRemove={handleRemove}\n                  />\n                </>\n              )\n            }\n          />\n          <Route render={() => <Redirect to={{ pathname: '/' }} />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}