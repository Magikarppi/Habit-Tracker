{"version":3,"sources":["services/habits.ts","services/login.ts","services/signup.ts","components/AddHabit.tsx","utils.ts","components/Habit.tsx","images/Habit-tracker-Logged-empty.png","images/Habit-tracker-habit-more-info.png","images/Habit-tracker-Logged-habits-big-img.png","services/quote.ts","components/LoggedOutView.tsx","components/Home.tsx","components/HabitMoreInfo.tsx","globalStyle.ts","components/LoginSignUp.tsx","components/ErrSuccNotification.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["baseUrl","token","undefined","setToken","newToken","create","data","a","requestHeaders","Headers","append","fetch","method","body","JSON","stringify","headers","response","json","console","log","remove","habit","id","update","login","signup","SubmitBtn","styled","button","SubmitDiv","div","DivInput","CancelBtn","ErrorDiv","AddHabit","handleHabitSubmit","toggleHabitForm","inputRef","useRef","useEffect","current","focus","initialValues","habitName","validate","values","errors","length","onSubmit","setSubmitting","isSubmitting","type","name","placeholder","innerRef","data-cy","component","LoadingOutlined","spin","style","fontSize","marginBottom","data-testid","onClick","consts","stringShortener","value","maxVal","maxLength","substr","concat","Div","StyledLink","Link","DoneBtn","ButtonWrapper","DoneNotif","StreakDiv","Habit","handleCompletion","handleCancelCompletion","useState","currentStreak","setCurrentStreak","loading","setLoading","getCurrentStreak","completions","dateObj","handleCompletions","action","today","Date","todayObj","thisDay","getDate","thisMonth","getMonth","thisYear","getFullYear","matchingDates","filter","completion","Object","keys","every","key","count","reverse","forEach","el","i","setUTCHours","to","background","border","getQuote","ParagraphSmall","p","ParagraphMed","ParagraphBig","Underline","span","Italic","GuideWrapper","GuidePairWrapper","ParagraphWrapper","imgStyle","width","height","borderRadius","LoggedOutView","quote","setQuote","quoteAuthor","setQuoteAuthor","fetchQuote","contents","quoteObject","quotes","author","mounted","fetchedQuoteObject","backgroundColor","borderTopLeftRadius","borderTopRightRadius","color","paddingBottom","src","LoggedEmptyImg","alt","LoggedHabitsImg","HabitMoreInfoImg","marginRight","HabitsDiv","Wrapper","NewHabitBtn","Home","loggedInUser","habitsToShow","showHabitForm","habits","map","DeleteBtn","WrapperChart","SuccessDaysWrapper","TotalDaysDiv","H1","h1","ParagraphNote","HabitMoreInfo","handleRemove","totalCompletedDays","completionDays","options","title","noDataPattern","colorAxis","minValue","colors","calendar","cellSize","cellColor","stroke","strokeOpacity","strokeWidth","focusedCellColor","monthLabel","fontName","bold","italic","monthOutlineColor","unusedMonthOutlineColor","underMonthSpace","underYearSpace","yearLabel","window","screen","chartType","loader","rootProps","GlobalStyle","createGlobalStyle","H3","h3","LoginSignUp","handleSignUpSubmit","handleLoginSubmit","formToShow","url","parts","split","lastIndexOf","getLastPart","location","href","username","password","SuccessMsgDiv","ErrorMsgDiv","Notification","successMessage","errorMessage","HeaderWrapper","HeaderSubWrapper","LoggedInDiv","LogOutBtn","Header","handleLogout","getPart","part","urlSecondToLast","urlLastPart","App","setHabitsToShow","setLoggedInUser","setErrorMessage","setSuccessMessage","redirect","setRedirect","setShowHabitForm","document","loggedUserJSON","localStorage","getItem","user","parse","signupData","setTimeout","error","includes","loginData","responseData","toUpperCase","setItem","clear","newHabit","confirm","e","date","updateHabit","splice","ErrSuccNotification","exact","path","render","match","params","find","pathname","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.bdd3e5b8.chunk.js","sourcesContent":["import { HabitType } from '../types';\r\n\r\nconst baseUrl = '/api/habits';\r\n\r\nlet token: undefined | string = undefined;\r\n\r\nexport const setToken = (newToken: string) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nexport const create = async (data: { name: string }) => {\r\n  if (!token) {\r\n    return;\r\n  }\r\n  try {\r\n    const requestHeaders: HeadersInit = new Headers();\r\n    requestHeaders.append('Content-Type', 'application/json');\r\n    requestHeaders.append('Authorization', token);\r\n    const response = await fetch(baseUrl, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: requestHeaders,\r\n      // headers: { 'Content-Type': 'application/json', Authorization: token },\r\n    });\r\n    return response.json();\r\n  } catch (exception) {\r\n    console.log(exception);\r\n  }\r\n};\r\n\r\nexport const remove = async (habit: HabitType) => {\r\n  try {\r\n    await fetch(`${baseUrl}/${habit.id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const update = async (habit: HabitType) => {\r\n  if (!token) {\r\n    return;\r\n  }\r\n  try {\r\n    const requestHeaders: HeadersInit = new Headers();\r\n    requestHeaders.append('Content-Type', 'application/json');\r\n    requestHeaders.append('Authorization', token);\r\n    const response = await fetch(`${baseUrl}/${habit.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(habit),\r\n      // headers: { 'Content-Type': 'application/json', Authorization: token },\r\n      headers: requestHeaders,\r\n    });\r\n    return response.json();\r\n  } catch (exception) {\r\n    console.log(exception);\r\n  }\r\n};\r\n","const baseurl = '/api/login';\r\n\r\nexport const login = async (data: { username: string; password: string }) => {\r\n  try {\r\n    const response = await fetch(baseurl, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    return response.json();\r\n  } catch (exception) {\r\n    console.log(exception);\r\n  }\r\n};\r\n","const baseUrl = '/api/users';\r\n\r\nexport const signup = async (data: { username: string; password: string }) => {\r\n  try {\r\n    const response = await fetch(baseUrl, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    return response.json();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport { AddHabitProps, HabitInputValue } from '../types';\r\n\r\nconst SubmitBtn = styled.button`\r\n  background: #fffba8;\r\n  &:hover {\r\n    background: #fff870;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst SubmitDiv = styled.div`\r\n  margin: auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst DivInput = styled.div`\r\n  margin: auto;\r\n  margin-bottom: 10px;\r\n  background: rgba(255, 255, 220, 0.5);\r\n  text-align: center;\r\n  width: 250px;\r\n  height: 20%;\r\n  overflow: hidden;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  color: black;\r\n`;\r\n\r\nconst CancelBtn = styled.button`\r\n  background: #cfccc2;\r\n  &:hover {\r\n    background: #ff711f;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst ErrorDiv = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst AddHabit = ({ handleHabitSubmit, toggleHabitForm }: AddHabitProps) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const initialValues = {\r\n    habitName: '',\r\n  };\r\n\r\n  const validate = (values: HabitInputValue) => {\r\n    const { habitName } = values;\r\n    const errors: any = {};\r\n\r\n    if (!habitName) {\r\n      errors.habitName = 'Please enter a habit name';\r\n    } else if (habitName.length >= 30) {\r\n      errors.habitName = 'Max length is 30 chars';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validate={(values) => validate(values)}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          handleHabitSubmit(values);\r\n        }}\r\n      >\r\n        {({ isSubmitting, errors }) => (\r\n          <Form>\r\n            <DivInput>\r\n              <Field\r\n                type=\"habitName\"\r\n                name=\"habitName\"\r\n                placeholder=\"Habit name\"\r\n                innerRef={inputRef}\r\n                data-cy=\"habit-input\"\r\n              />\r\n              <ErrorMessage name=\"habitName\" component={ErrorDiv} />\r\n            </DivInput>\r\n            {isSubmitting ? (\r\n              <LoadingOutlined\r\n                spin\r\n                style={{ fontSize: 40, marginBottom: 20 }}\r\n              />\r\n            ) : (\r\n              <SubmitDiv>\r\n                <SubmitBtn\r\n                  data-cy=\"habit-submit-btn\"\r\n                  data-testid=\"habit-submit\"\r\n                  type=\"submit\"\r\n                >\r\n                  Add\r\n                </SubmitBtn>\r\n                <CancelBtn\r\n                  data-cy=\"habit-form-close\"\r\n                  data-testid=\"habit-form-close-btn\"\r\n                  onClick={toggleHabitForm}\r\n                >\r\n                  cancel\r\n                </CancelBtn>\r\n              </SubmitDiv>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddHabit;\r\n","import { LoggedInUser } from './types';\r\n\r\nexport const consts = {\r\n  appName: 'Simplify Success',\r\n};\r\n\r\nexport const dummyUser: LoggedInUser = {\r\n  username: 'DummyDude',\r\n  id: 'hasddhw4hww55',\r\n  habits: [\r\n    {\r\n      completions: [\r\n        {\r\n          thisDay: 5,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 6,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 7,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 8,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n      ],\r\n      id: 'sagassagsa',\r\n      name: 'Pelaa Heroesta',\r\n    },\r\n    {\r\n      completions: [\r\n        {\r\n          thisDay: 5,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 6,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 7,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 8,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n      ],\r\n      id: 'sagassag322sa',\r\n      name: 'A long walk',\r\n    },\r\n    {\r\n      completions: [\r\n        {\r\n          thisDay: 5,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 6,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 7,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n        {\r\n          thisDay: 8,\r\n          thisMonth: 4,\r\n          thisYear: 2021,\r\n        },\r\n      ],\r\n      id: 'sagassaggagasgsa',\r\n      name: 'See a friend',\r\n    },\r\n  ],\r\n};\r\n\r\nexport const stringShortener = (value: string, maxVal?: number) => {\r\n  let maxLength = maxVal ? maxVal : 26;\r\n  if (value.length > maxLength) {\r\n    const truncatedString = value.substr(0, maxLength).concat('...');\r\n    return truncatedString;\r\n  } else {\r\n    return value;\r\n  }\r\n};\r\n","import { LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { Completion, HabitProps, HabitType } from '../types';\r\nimport { stringShortener } from '../utils';\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid black;\r\n  height: 180px;\r\n  width: 90%;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: #000000;\r\n  width: 80%;\r\n`;\r\n\r\nconst DoneBtn = styled.button`\r\n  background: #fff870;\r\n  &:hover {\r\n    background: #a8ff36;\r\n  }\r\n  font-size: 0.9em;\r\n  /* padding: 0.25em 1em; */\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst CancelBtn = styled.button`\r\n  &:hover {\r\n    background: #ff4141;\r\n  }\r\n  font-size: 0.9em;\r\n  /* padding: 0.25em 1em; */\r\n  margin: 0;\r\n  border: 2px solid #ff4141;\r\n  border-radius: 50%;\r\n  text-align: center;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  justify-content: space-evenly;\r\n  width: 80%;\r\n`;\r\n\r\nconst DoneNotif = styled.div`\r\n  background: #73ff00;\r\n  color: black;\r\n  width: 50px;\r\n  font-size: 0.9em;\r\n  margin-top: 5px;\r\n  border: 2px solid #000000;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst StreakDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 2px solid #000000;\r\n  border-radius: 10px;\r\n  width: 50px;\r\n  height: 50px;\r\n  font-size: 0.9em;\r\n  color: black;\r\n`;\r\n\r\nconst Habit = ({\r\n  habit,\r\n  handleCompletion,\r\n  handleCancelCompletion,\r\n}: HabitProps) => {\r\n  const [currentStreak, setCurrentStreak] = useState<number | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (habit) {\r\n      setCurrentStreak(getCurrentStreak(habit.completions));\r\n    }\r\n  }, [habit, handleCompletion]);\r\n\r\n  if (!habit) {\r\n    return null;\r\n  }\r\n\r\n  const handleCompletions = async (\r\n    action: 'undone' | 'done',\r\n    habit: HabitType\r\n  ) => {\r\n    setLoading(true);\r\n    if (action === 'done') {\r\n      await handleCompletion(habit);\r\n      setLoading(false);\r\n      return;\r\n    } else if (action === 'undone') {\r\n      await handleCancelCompletion(habit);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    return;\r\n  };\r\n\r\n  const findByMatchingDate = (completions: any, dateObj: any) => {\r\n    return completions.filter((completion: any) => {\r\n      return Object.keys(dateObj).every((key) => {\r\n        return completion[key] === dateObj[key];\r\n      });\r\n    });\r\n  };\r\n\r\n  const today = new Date();\r\n  const todayObj = {\r\n    thisDay: today.getDate(),\r\n    thisMonth: today.getMonth(),\r\n    thisYear: today.getFullYear(),\r\n  };\r\n\r\n  const matchingDates = findByMatchingDate(habit.completions, todayObj);\r\n\r\n  const getCurrentStreak = (completions: Completion[]) => {\r\n    let count = 0;\r\n    const transformToDateString = (completion: Completion) => {\r\n      return `${completion.thisYear}-${completion.thisMonth + 1}-${\r\n        completion.thisDay + 1\r\n      }`;\r\n    };\r\n    const completionsCopy = [...completions];\r\n    completionsCopy.reverse().forEach((el, i) => {\r\n      const today = new Date().setUTCHours(0, 0, 0, 0);\r\n      const currElDate = new Date(transformToDateString(el)).setUTCHours(\r\n        0,\r\n        0,\r\n        0,\r\n        0\r\n      );\r\n\r\n      const milliSecondsInADay = 86400000;\r\n      const daysPassed = i * milliSecondsInADay;\r\n      const daysPassedSinceCompletion = today - currElDate;\r\n\r\n      if (daysPassedSinceCompletion === daysPassed) {\r\n        count++;\r\n      }\r\n    });\r\n    return count;\r\n  };\r\n\r\n  return (\r\n    <Div>\r\n      <StyledLink data-cy=\"habit-link\" to={`/habits/${habit.id}`}>\r\n        {stringShortener(habit.name)}\r\n      </StyledLink>\r\n      {currentStreak && currentStreak > 1 ? (\r\n        <StreakDiv>\r\n          <p style={{ fontSize: '10px' }}>Streak</p>\r\n          {currentStreak}\r\n        </StreakDiv>\r\n      ) : (\r\n        <StreakDiv\r\n          style={{\r\n            background: 'none',\r\n            border: 'none',\r\n          }}\r\n        ></StreakDiv>\r\n      )}\r\n      {matchingDates.length > 0 ? (\r\n        loading ? (\r\n          <LoadingOutlined spin style={{ fontSize: 40, marginBottom: 20 }} />\r\n        ) : (\r\n          <ButtonWrapper>\r\n            <DoneNotif>Done!</DoneNotif>\r\n            <CancelBtn\r\n              data-cy=\"cancel-done-btn\"\r\n              onClick={() => handleCompletions('undone', habit)}\r\n            >\r\n              x\r\n            </CancelBtn>\r\n          </ButtonWrapper>\r\n        )\r\n      ) : loading ? (\r\n        <LoadingOutlined spin style={{ fontSize: 40, marginBottom: 20 }} />\r\n      ) : (\r\n        <div>\r\n          <DoneBtn\r\n            data-cy=\"done-btn\"\r\n            onClick={() => handleCompletions('done', habit)}\r\n          >\r\n            Done for today!\r\n          </DoneBtn>\r\n        </div>\r\n      )}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Habit;\r\n","export default __webpack_public_path__ + \"static/media/Habit-tracker-Logged-empty.7775ea4c.png\";","export default __webpack_public_path__ + \"static/media/Habit-tracker-habit-more-info.6b1b7129.png\";","export default __webpack_public_path__ + \"static/media/Habit-tracker-Logged-habits-big-img.be3e0e6f.png\";","const baseUrl = 'https://quotes.rest/qod.json?category=inspire';\r\n\r\nexport const getQuote = async () => {\r\n  try {\r\n    const response = await fetch(baseUrl);\r\n    return response.json();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport LoggedEmptyImg from '../images/Habit-tracker-Logged-empty.png';\r\nimport HabitMoreInfoImg from '../images/Habit-tracker-habit-more-info.png';\r\nimport LoggedHabitsImg from '../images/Habit-tracker-Logged-habits-big-img.png';\r\nimport { getQuote } from '../services/quote';\r\n\r\nconst ButtonWrapper = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: #63006e;\r\n  font-weight: bold;\r\n  margin-right: 300px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 60px;\r\n  height: 30px;\r\n`;\r\n\r\nconst ParagraphSmall = styled.p`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  text-align: center;\r\n  width: 60%;\r\n`;\r\n\r\nconst ParagraphMed = styled.p`\r\n  font-size: 20px;\r\n  width: 60%;\r\n  text-align: center;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  color: #fffc37;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  @media (min-width: 767px) {\r\n    font-size: 40px;\r\n  }\r\n`;\r\n\r\nconst ParagraphBig = styled.p`\r\n  font-size: 30px;\r\n  width: 60%;\r\n  text-align: center;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  @media (min-width: 767px) {\r\n    font-size: 60px;\r\n  }\r\n`;\r\n\r\nconst Underline = styled.span`\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst Italic = styled.span`\r\n  font-style: italic;\r\n`;\r\n\r\nconst GuideWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background-color: teal;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst GuidePairWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst ParagraphWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 6%;\r\n  margin-top: 2%;\r\n`;\r\n\r\nconst imgStyle = {\r\n  width: 300,\r\n  height: 200,\r\n  borderRadius: 10,\r\n};\r\n\r\nconst LoggedOutView = () => {\r\n  const [quote, setQuote] = useState('');\r\n  const [quoteAuthor, setQuoteAuthor] = useState('');\r\n\r\n  const fetchQuote = async () => {\r\n    try {\r\n      const response = await getQuote();\r\n      if (!response.contents) {\r\n        return null;\r\n      }\r\n      const quoteObject = {\r\n        quote: response.contents.quotes[0].quote,\r\n        author: response.contents.quotes[0].author,\r\n      };\r\n      return quoteObject;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const getQuote = async () => {\r\n      const fetchedQuoteObject = await fetchQuote();\r\n      if (mounted) {\r\n        setQuote(fetchedQuoteObject?.quote);\r\n        setQuoteAuthor(fetchedQuoteObject?.author);\r\n      }\r\n    };\r\n    getQuote();\r\n\r\n    return function cleanup() {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ParagraphBig>\r\n        Did you know that the things that you do{' '}\r\n        <Underline>repeatedly</Underline> construct your identity and determine\r\n        the success that you are going to have?\r\n      </ParagraphBig>\r\n      <ParagraphMed>Start tracking your habits now!</ParagraphMed>\r\n      <ButtonWrapper>\r\n        <StyledLink data-cy=\"login-btn\" data-testid=\"login-btn\" to=\"/login\">\r\n          Login\r\n        </StyledLink>\r\n        <StyledLink data-cy=\"signup-btn\" data-testid=\"signup-btn\" to=\"/signup\">\r\n          Sign Up\r\n        </StyledLink>\r\n      </ButtonWrapper>\r\n      {quote ? (\r\n        <ParagraphWrapper>\r\n          <ParagraphSmall data-testid=\"quotePara\">\r\n            \"{<Italic>{quote}</Italic>}\" - {quoteAuthor}\r\n          </ParagraphSmall>\r\n        </ParagraphWrapper>\r\n      ) : (\r\n        <ParagraphWrapper>\r\n          <ParagraphSmall />\r\n        </ParagraphWrapper>\r\n      )}\r\n      <div\r\n        style={{\r\n          backgroundColor: 'teal',\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n        }}\r\n      >\r\n        <ParagraphMed style={{ color: 'white', paddingBottom: '20px' }}>\r\n          This is how Habit Tracker works:\r\n        </ParagraphMed>\r\n      </div>\r\n      <GuideWrapper>\r\n        <GuidePairWrapper>\r\n          <ParagraphSmall style={{ width: '150px' }}>\r\n            Log in and add a habit that you want to track\r\n          </ParagraphSmall>\r\n          <img\r\n            src={LoggedEmptyImg}\r\n            alt=\"Logged in view no habits\"\r\n            style={imgStyle}\r\n          />\r\n        </GuidePairWrapper>\r\n        <GuidePairWrapper>\r\n          <ParagraphSmall style={{ width: '150px' }}>\r\n            View all your habits and mark them as done\r\n          </ParagraphSmall>\r\n          <img\r\n            src={LoggedHabitsImg}\r\n            alt=\"Logged in view no habits\"\r\n            style={imgStyle}\r\n          />\r\n        </GuidePairWrapper>\r\n        <GuidePairWrapper>\r\n          <ParagraphSmall style={{ width: '150px' }}>\r\n            View completed days in a calendar and delete habit if necessary\r\n          </ParagraphSmall>\r\n          <img\r\n            src={HabitMoreInfoImg}\r\n            alt=\"Logged in view no habits\"\r\n            style={{ ...imgStyle, marginRight: '5px' }}\r\n          />\r\n        </GuidePairWrapper>\r\n      </GuideWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoggedOutView;\r\n","import styled from 'styled-components';\r\n\r\nimport { HomeProps } from '../types';\r\nimport AddHabit from './AddHabit';\r\nimport Habit from './Habit';\r\nimport LoggedOutView from './LoggedOutView';\r\n\r\nconst HabitsDiv = styled.div`\r\n  background: rgba(255, 255, 220, 0.8);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 300px;\r\n  padding: 10px;\r\n  margin: auto;\r\n  margin-bottom: 5%;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst ParagraphSmall = styled.p`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  text-shadow: 1px 1px;\r\n  text-align: center;\r\n  width: 60%;\r\n  padding: 0.25em 1em;\r\n`;\r\n\r\nconst ParagraphMed = styled(ParagraphSmall)`\r\n  font-size: 20px;\r\n  color: #fffc37;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  @media (min-width: 767px) {\r\n    font-size: 40px;\r\n  }\r\n`;\r\n\r\nconst ParagraphBig = styled(ParagraphSmall)`\r\n  font-size: 30px;\r\n  @media (min-width: 767px) {\r\n    font-size: 60px;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst NewHabitBtn = styled.button`\r\n  background: #f2f5b5;\r\n  &:hover {\r\n    background: #fff870;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Home = ({\r\n  loggedInUser,\r\n  habitsToShow,\r\n  handleHabitSubmit,\r\n  handleCompletion,\r\n  handleCancelCompletion,\r\n  toggleHabitForm,\r\n  showHabitForm,\r\n}: HomeProps) => {\r\n  return loggedInUser ? (\r\n    <Wrapper>\r\n      {showHabitForm || loggedInUser.habits.length === 0 ? (\r\n        <div data-testid=\"habitForm-open-div\">\r\n          <AddHabit\r\n            handleHabitSubmit={handleHabitSubmit}\r\n            toggleHabitForm={toggleHabitForm}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <NewHabitBtn\r\n          data-cy=\"habit-form-open-btn\"\r\n          data-testid=\"habit-form-open-btn\"\r\n          onClick={toggleHabitForm}\r\n        >\r\n          Add a new habit\r\n        </NewHabitBtn>\r\n      )}\r\n      {habitsToShow.length > 0 ? (\r\n        <HabitsDiv data-testid=\"habit-div\" data-cy=\"habit-div\">\r\n          {habitsToShow.map((habit) => (\r\n            <Habit\r\n              key={habit.id}\r\n              habit={habit}\r\n              handleCompletion={handleCompletion}\r\n              handleCancelCompletion={handleCancelCompletion}\r\n            />\r\n          ))}\r\n        </HabitsDiv>\r\n      ) : (\r\n        <>\r\n          <ParagraphBig>Add your first habit in the form above</ParagraphBig>\r\n          <ParagraphMed>Here are a few ideas if you need a spark:</ParagraphMed>\r\n          <ParagraphSmall>\"Physical exercise\"</ParagraphSmall>\r\n          <ParagraphSmall>\"Reading\"</ParagraphSmall>\r\n          <ParagraphSmall>\"Explore wikipedia\"</ParagraphSmall>\r\n          <ParagraphSmall>\"Practice magic tricks\"</ParagraphSmall>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  ) : (\r\n    <LoggedOutView />\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Chart from 'react-google-charts';\r\nimport styled from 'styled-components';\r\nimport { HabitMoreInfoProps } from '../types';\r\nimport { stringShortener } from '../utils';\r\n\r\nconst DeleteBtn = styled.button`\r\n  background: #cfccc2;\r\n  &:hover {\r\n    background: #ff711f;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst WrapperChart = styled.div`\r\n  margin-left: 2%;\r\n  max-width: 100%;\r\n`;\r\n\r\nconst SuccessDaysWrapper = styled.div`\r\n  /* background: rgba(255, 255, 220, 0.8); */\r\n  width: 200px;\r\n  padding: 10px;\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst TotalDaysDiv = styled.div`\r\n  background: rgba(255, 234, 31, 0.8);\r\n  width: 170px;\r\n  padding: 10px;\r\n  margin: auto;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  color: black;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  color: rgb(255, 234, 31);\r\n  font-size: 2em;\r\n  text-align: center;\r\n`;\r\n\r\nconst ParagraphSmall = styled.p`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  text-shadow: 1px 1px;\r\n  text-align: center;\r\n  padding: 0.25em 1em;\r\n  color: black;\r\n`;\r\n\r\nconst ParagraphNote = styled.p`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  text-shadow: 1px 1px;\r\n  text-align: center;\r\n  padding: 0.25em 1em;\r\n  color: black;\r\n  font-size: 15px;\r\n  font-style: italic;\r\n`;\r\n\r\nconst HabitMoreInfo = ({ habit, handleRemove }: HabitMoreInfoProps) => {\r\n  if (!habit) {\r\n    return null;\r\n  }\r\n\r\n  const totalCompletedDays = habit.completions.length;\r\n\r\n  const completionDays = habit.completions.map((dateObj) => {\r\n    return [new Date(dateObj.thisYear, dateObj.thisMonth, dateObj.thisDay), 1];\r\n  });\r\n\r\n  let data: any = [\r\n    [\r\n      { type: 'date', id: 'Date' },\r\n      { type: 'number', id: 'Completions' },\r\n    ],\r\n  ];\r\n\r\n  const options = {\r\n    title: stringShortener(habit.name, 45),\r\n    noDataPattern: {\r\n      backgroundColor: '#000000',\r\n      color: '#000000',\r\n    },\r\n    colorAxis: {\r\n      minValue: 0,\r\n      colors: ['#00e5ff', '#73ff00'],\r\n    },\r\n    calendar: {\r\n      cellSize: 25,\r\n      cellColor: {\r\n        stroke: '#e3e3e3',\r\n        strokeOpacity: 0.5,\r\n        strokeWidth: 1,\r\n      },\r\n      focusedCellColor: {\r\n        stroke: '#d3362d',\r\n        strokeOpacity: 1,\r\n        strokeWidth: 1,\r\n      },\r\n      monthLabel: {\r\n        fontName: 'Arial',\r\n        fontSize: 12,\r\n        color: '#fad850',\r\n        bold: true,\r\n        italic: true,\r\n      },\r\n      monthOutlineColor: {\r\n        stroke: '#fad850',\r\n        strokeOpacity: 0.8,\r\n        strokeWidth: 3,\r\n      },\r\n      unusedMonthOutlineColor: {\r\n        stroke: '#bc5679',\r\n        strokeOpacity: 0.8,\r\n        strokeWidth: 2,\r\n      },\r\n      underMonthSpace: 16,\r\n      underYearSpace: 10,\r\n      yearLabel: {\r\n        fontName: 'Arial',\r\n        fontSize: 32,\r\n        color: 'white',\r\n        bold: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  data = data.concat(completionDays);\r\n\r\n  // Desktop view:\r\n  if (window.screen.width > 767) {\r\n    return (\r\n      <Wrapper>\r\n        <WrapperChart>\r\n          <Chart\r\n            width={'100%'}\r\n            height={350}\r\n            chartType=\"Calendar\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={data}\r\n            options={options}\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n        </WrapperChart>\r\n        <TotalDaysDiv>Times done: {totalCompletedDays}</TotalDaysDiv>\r\n        <div>\r\n          <DeleteBtn data-cy=\"delete-btn\" onClick={() => handleRemove(habit)}>\r\n            Delete\r\n          </DeleteBtn>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  } else {\r\n    //Mobile view:\r\n    return (\r\n      <Wrapper>\r\n        <H1>{stringShortener(habit.name, 45)}</H1>\r\n        <TotalDaysDiv>Times done: {totalCompletedDays}</TotalDaysDiv>\r\n        <SuccessDaysWrapper>\r\n          Dates of success:\r\n          {habit.completions.map((dateObj) => (\r\n            <ParagraphSmall\r\n              key={`${dateObj.thisDay} ${dateObj.thisMonth} ${dateObj.thisYear}`}\r\n            >{`${dateObj.thisDay} ${dateObj.thisMonth} ${dateObj.thisYear}`}</ParagraphSmall>\r\n          ))}\r\n        </SuccessDaysWrapper>\r\n        <div>\r\n          <DeleteBtn data-cy=\"delete-btn\" onClick={() => handleRemove(habit)}>\r\n            Delete\r\n          </DeleteBtn>\r\n        </div>\r\n        <ParagraphNote>\r\n          Please view on a bigger screen for more detailed view\r\n        </ParagraphNote>\r\n      </Wrapper>\r\n    );\r\n  }\r\n};\r\n\r\nexport default HabitMoreInfo;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n  min-height: 100%;\r\n  max-width: 100%;\r\n  overflow-x: none;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    min-height: 100%;\r\n    max-width: 100%;\r\n    background: linear-gradient(teal, purple);\r\n    font-family: Open-Sans, Helvetica, Sans-Serif;\r\n    color: #fafafa;\r\n    text-align: center;\r\n  }\r\n  a:link {\r\n    background: #fafafa;\r\n    &:hover {\r\n    background: #fffba8;\r\n  }\r\n  text-align: center;\r\n  vertical-align: center;\r\n  font-size: 1em;\r\n  margin: 0.5em;\r\n  padding: 1em 1em;\r\n  border: 2px solid black;\r\n  border-radius: 3px;\r\n  }\r\n  button {\r\n    background: #fafafa;\r\n  &:hover {\r\n    background: #fffba8;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  }\r\n  input {\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  color: black;\r\n  background: #fffba8;\r\n  border: none;\r\n  border-radius: 3px;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  font-size: 17px;\r\n  }\r\n  h1 {\r\n    font-size: 20px;\r\n    @media (min-width: 767px) {\r\n    font-size: 200%;\r\n    }\r\n  }\r\n  h2 {\r\n    font-size: 40px;\r\n  }\r\n  h3 {\r\n    font-size: 30px;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport { LoginSignUpInputValues, LoginSignUpProps } from '../types';\r\n\r\nconst SubmitDiv = styled.div`\r\n  margin: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SubmitBtn = styled.button``;\r\n\r\nconst DivInput = styled.div`\r\n  margin: auto;\r\n  margin-bottom: 10px;\r\n  margin-top: 20px;\r\n  background: rgba(255, 255, 220, 0.5);\r\n  text-align: center;\r\n  width: 250px;\r\n  height: 20%;\r\n  overflow: hidden;\r\n  border: 2px solid #8f8d64;\r\n  border-radius: 3px;\r\n  color: black;\r\n`;\r\n\r\nconst H3 = styled.h3`\r\n  width: 200px;\r\n  margin: auto;\r\n  margin-bottom: 10px;\r\n  padding: 0.25em 1em;\r\n  text-align: center;\r\n`;\r\n\r\nconst ErrorDiv = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst LoginSignUp = ({\r\n  handleSignUpSubmit,\r\n  handleLoginSubmit,\r\n}: LoginSignUpProps) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  const getLastPart = (url: string) => {\r\n    const parts = url.split('/');\r\n    return url.lastIndexOf('/') !== url.length - 1\r\n      ? parts[parts.length - 1]\r\n      : parts[parts.length - 2];\r\n  };\r\n\r\n  const formToShow = getLastPart(window.location.href);\r\n\r\n  const initialValues = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  const validate = (values: LoginSignUpInputValues) => {\r\n    const { username, password } = values;\r\n    const errors: any = {};\r\n\r\n    if (!username) {\r\n      errors.username = 'Username is required!';\r\n    } else if (username.length > 12) {\r\n      errors.username = 'Max length is 12 characters';\r\n    } else if (username.length < 3) {\r\n      errors.username = 'Username should be at least 3 characters';\r\n    }\r\n\r\n    if (!password) {\r\n      errors.password = 'Password is required!';\r\n    } else if (password.length < 5) {\r\n      errors.password = 'Password should be at least 5 characters long';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  switch (formToShow) {\r\n    case 'signup':\r\n      return (\r\n        <div>\r\n          <H3>Sign Up</H3>\r\n          <div>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validate={(values) => validate(values)}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                handleSignUpSubmit(values);\r\n              }}\r\n            >\r\n              {({ isSubmitting, errors }) => (\r\n                <Form>\r\n                  <DivInput>\r\n                    <Field\r\n                      type=\"username\"\r\n                      name=\"username\"\r\n                      placeholder=\"Username\"\r\n                      innerRef={inputRef}\r\n                      data-cy=\"username-input\"\r\n                    />\r\n                    <ErrorMessage name=\"username\" component={ErrorDiv} />\r\n                  </DivInput>\r\n                  <DivInput>\r\n                    <Field\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      data-cy=\"password-input\"\r\n                    />\r\n                    <ErrorMessage name=\"password\" component={ErrorDiv} />\r\n                  </DivInput>\r\n                  {isSubmitting ? (\r\n                    <LoadingOutlined spin style={{ fontSize: 40 }} />\r\n                  ) : (\r\n                    <SubmitDiv>\r\n                      <SubmitBtn type=\"submit\" data-cy=\"submit-btn\">\r\n                        Submit\r\n                      </SubmitBtn>\r\n                    </SubmitDiv>\r\n                  )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      );\r\n    case 'login':\r\n      return (\r\n        <div>\r\n          <H3>Login</H3>\r\n          <div>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validate={(values) => validate(values)}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                handleLoginSubmit(values);\r\n              }}\r\n            >\r\n              {({ isSubmitting, errors }) => (\r\n                <Form>\r\n                  <DivInput>\r\n                    <Field\r\n                      type=\"username\"\r\n                      name=\"username\"\r\n                      placeholder=\"Username\"\r\n                      innerRef={inputRef}\r\n                      data-cy=\"username-input\"\r\n                    />\r\n                    <ErrorMessage name=\"username\" component={ErrorDiv} />\r\n                  </DivInput>\r\n                  <DivInput>\r\n                    <Field\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      data-cy=\"password-input\"\r\n                    />\r\n                    <ErrorMessage name=\"password\" component={ErrorDiv} />\r\n                  </DivInput>\r\n                  {isSubmitting ? (\r\n                    <LoadingOutlined style={{ fontSize: 40 }} spin />\r\n                  ) : (\r\n                    <SubmitDiv>\r\n                      <SubmitBtn type=\"submit\" data-cy=\"submit-btn\">\r\n                        Submit\r\n                      </SubmitBtn>\r\n                    </SubmitDiv>\r\n                  )}\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default LoginSignUp;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ErrorSuccessMsg } from '../types';\r\n\r\nconst SuccessMsgDiv = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  color: #000000;\r\n  background: #a1ff54;\r\n  font-size: 20px;\r\n  border-style: solid;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ErrorMsgDiv = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  color: #000000;\r\n  background: #ff711f;\r\n  font-size: 20px;\r\n  border-style: solid;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Notification = ({\r\n  successMessage,\r\n  errorMessage,\r\n}: {\r\n  successMessage: ErrorSuccessMsg;\r\n  errorMessage: ErrorSuccessMsg;\r\n}) => {\r\n  if (successMessage && !errorMessage) {\r\n    return <SuccessMsgDiv>{successMessage}</SuccessMsgDiv>;\r\n  } else if (errorMessage && !successMessage) {\r\n    return <ErrorMsgDiv>{errorMessage}</ErrorMsgDiv>;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { HeaderProps } from '../types';\r\nimport { consts } from '../utils';\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: 30%;\r\n  /* background-color: #383838; */\r\n`;\r\n\r\nconst HeaderSubWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 30%;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  /* font-size: 200%; */\r\n  color: #fffc37;\r\n  text-shadow: 1px 1px black;\r\n`;\r\n\r\nconst LoggedInDiv = styled.div`\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n  font-size: 10px;\r\n  @media (min-width: 767px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst LogOutBtn = styled.button`\r\n  background: #fff870;\r\n  &:hover {\r\n    background: #85015d;\r\n  }\r\n  height: 30px;\r\n  width: 80px;\r\n  font-size: 0.6em;\r\n  @media (min-width: 767px) {\r\n    font-size: 0.9em;\r\n    margin: 1em;\r\n    padding: 0.25em 1em;\r\n    border: 2px solid #8f8d64;\r\n    border-radius: 3px;\r\n    text-align: center;\r\n    height: 30px;\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  background: #cfccc2;\r\n  &:hover {\r\n    background: darkgray;\r\n  }\r\n  font-size: 0.9em;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n`;\r\n\r\nconst Header = ({ loggedInUser, handleLogout }: HeaderProps) => {\r\n  const getPart = (part: 'last' | 'secondToLast', url: string) => {\r\n    const parts = url.split('/');\r\n    if (part === 'last') {\r\n      return url.lastIndexOf('/') !== url.length - 1\r\n        ? parts[parts.length - 1]\r\n        : parts[parts.length - 2];\r\n    } else if (part === 'secondToLast') {\r\n      return url.lastIndexOf('/') !== url.length - 1\r\n        ? parts[parts.length - 2]\r\n        : parts[parts.length - 3];\r\n    }\r\n  };\r\n\r\n  const urlSecondToLast = getPart('secondToLast', window.location.href);\r\n  const urlLastPart = getPart('last', window.location.href);\r\n\r\n  return loggedInUser ? (\r\n    <HeaderWrapper>\r\n      <HeaderSubWrapper>\r\n        {urlSecondToLast === 'habits' ? (\r\n          <StyledLink data-cy=\"back-btn\" to=\"/\">\r\n            Back\r\n          </StyledLink>\r\n        ) : null}\r\n      </HeaderSubWrapper>\r\n      <HeaderSubWrapper>\r\n        <H1>{consts.appName}</H1>\r\n      </HeaderSubWrapper>\r\n      <HeaderSubWrapper>\r\n        <LoggedInDiv>{loggedInUser.username} logged in</LoggedInDiv>\r\n        <LogOutBtn data-cy=\"logout-btn\" onClick={handleLogout}>\r\n          Log out\r\n        </LogOutBtn>\r\n      </HeaderSubWrapper>\r\n    </HeaderWrapper>\r\n  ) : (\r\n    <HeaderWrapper>\r\n      <HeaderSubWrapper>\r\n        {urlLastPart === 'login' || urlLastPart === 'signup' ? (\r\n          <StyledLink data-cy=\"back-btn\" to=\"/\">\r\n            Back\r\n          </StyledLink>\r\n        ) : null}\r\n      </HeaderSubWrapper>\r\n      <HeaderSubWrapper>\r\n        <H1>{consts.appName}</H1>\r\n      </HeaderSubWrapper>\r\n      <HeaderSubWrapper />\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport './App.css';\nimport { setToken, create, remove, update } from './services/habits';\nimport { login } from './services/login';\nimport { signup } from './services/signup';\nimport Home from './components/Home';\nimport HabitMoreInfo from './components/HabitMoreInfo';\nimport {\n  ErrorSuccessMsg,\n  HabitInputValue,\n  HabitNameField,\n  HabitsToShow,\n  HabitType,\n  LoggedInUser,\n  LoginSignUpInputValues,\n} from './types';\nimport GlobalStyle from './globalStyle';\nimport LoginSignUp from './components/LoginSignUp';\nimport ErrSuccNotification from './components/ErrSuccNotification';\nimport Header from './components/Header';\nimport { FormikHelpers } from 'formik';\n\nconst App = () => {\n  const [habitsToShow, setHabitsToShow] = useState<HabitsToShow>([]);\n  const [loggedInUser, setLoggedInUser] = useState<LoggedInUser | null>(null);\n  const [errorMessage, setErrorMessage] = useState<ErrorSuccessMsg>('');\n  const [successMessage, setSuccessMessage] = useState<ErrorSuccessMsg>('');\n  const [redirect, setRedirect] = useState<string | null>(null);\n  const [showHabitForm, setShowHabitForm] = useState(false);\n\n  useEffect(() => {\n    document.title = 'Simplify Success';\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedHabitAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setLoggedInUser(user);\n      setHabitsToShow(user.habits);\n      setToken(user.token);\n    }\n  }, []);\n\n  const handleSignUpSubmit = async (values: LoginSignUpInputValues) => {\n    const { username, password } = values;\n    const signupData = {\n      username,\n      password,\n    };\n\n    if (signupData.password.length < 5) {\n      setErrorMessage('Password must be at least five (5) characters long');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000);\n      return;\n    }\n\n    try {\n      const response = await signup(signupData);\n      if (response.error) {\n        if (\n          response.error.includes(\n            'User validation failed: username: Error, expected `username` to be unique.'\n          )\n        ) {\n          setErrorMessage(\n            'Username is already taken. Please choose another username.'\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 3000);\n          return;\n        }\n\n        if (\n          response.error.includes(\n            'is shorter than the minimum allowed length'\n          ) &&\n          response.error.includes('username')\n        ) {\n          setErrorMessage(\n            'Username must be at least three (3) characters long'\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 3000);\n          return;\n        }\n\n        return;\n      }\n\n      if (response.username) {\n        setRedirect('/login');\n        setRedirect(null);\n        setSuccessMessage('A new user created! Please log in!');\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 3000);\n        return;\n      }\n    } catch (exception) {\n      console.log('exception', exception);\n    }\n  };\n\n  const handleLoginSubmit = async (values: LoginSignUpInputValues) => {\n    const { username, password } = values;\n    const loginData = {\n      username,\n      password,\n    };\n    try {\n      const responseData = await login(loginData);\n\n      if (responseData.error) {\n        if (\n          responseData.error.toUpperCase() === 'INVALID USERNAME OR PASSWORD'\n        ) {\n          setErrorMessage('Wrong username or password');\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 3000);\n          return;\n        }\n      }\n\n      if (responseData.username) {\n        window.localStorage.setItem(\n          'loggedHabitAppUser',\n          JSON.stringify(responseData)\n        );\n        setToken(responseData.token);\n        setLoggedInUser(responseData);\n        setHabitsToShow(responseData.habits);\n        setRedirect('/');\n        setRedirect(null);\n        return;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleLogout = () => {\n    window.localStorage.clear();\n    setLoggedInUser(null);\n    setHabitsToShow([]);\n    setRedirect('/');\n    setRedirect(null);\n  };\n\n  const handleHabitSubmit = async (values: HabitInputValue) => {\n    const { habitName } = values;\n    try {\n      const newHabit = {\n        name: habitName,\n      };\n\n      const responseData = await create(newHabit);\n\n      if (responseData.error) {\n        if (\n          responseData.error.includes(\n            'is shorter than the minimum allowed length'\n          )\n        ) {\n          setErrorMessage(\n            'Minimum length for a habit name is two (2) characters.'\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 3000);\n          return;\n        }\n        return;\n      }\n\n      if (responseData.name && loggedInUser) {\n        setHabitsToShow([...habitsToShow, responseData]);\n        loggedInUser.habits = loggedInUser.habits.concat(responseData);\n        setShowHabitForm(false);\n        window.localStorage.setItem(\n          'loggedHabitAppUser',\n          JSON.stringify(loggedInUser)\n        );\n        return;\n      }\n    } catch (exception) {\n      console.log(exception);\n    }\n  };\n\n  const toggleHabitForm = () => {\n    setShowHabitForm(!showHabitForm);\n  };\n\n  const handleRemove = async (habit: HabitType) => {\n    if (window.confirm(`Do you want to delete habit: ${habit.name}?`)) {\n      try {\n        await remove(habit);\n        setHabitsToShow(habitsToShow.filter((e) => e.id !== habit.id));\n        if (loggedInUser) {\n          loggedInUser.habits = loggedInUser.habits.filter(\n            (e) => e.id !== habit.id\n          );\n          window.localStorage.setItem(\n            'loggedHabitAppUser',\n            JSON.stringify(loggedInUser)\n          );\n          setSuccessMessage('Habit deleted');\n          setTimeout(() => {\n            setSuccessMessage(null);\n          }, 3000);\n          setRedirect('/');\n          setRedirect(null);\n          return;\n        }\n      } catch (exception) {\n        console.log(exception);\n        setErrorMessage('Habit deletion failed');\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 3000);\n      }\n    }\n  };\n\n  const handleCompletion = async (habit: HabitType) => {\n    if (!loggedInUser) {\n      return setErrorMessage('User not logged in');\n    }\n    const date = new Date();\n    const thisDay = date.getDate();\n    const thisMonth = date.getMonth();\n    const thisYear = date.getFullYear();\n\n    const todayObj = {\n      thisDay,\n      thisMonth,\n      thisYear,\n    };\n\n    const updateHabit = {\n      ...habit,\n      completions: habit.completions.concat(todayObj),\n    };\n\n    try {\n      const responseData = await update(updateHabit);\n      setHabitsToShow(\n        habitsToShow.map((e) => (e.id === responseData.id ? responseData : e))\n      );\n      loggedInUser.habits = loggedInUser.habits.map((e) =>\n        e.id === responseData.id ? responseData : e\n      );\n      window.localStorage.setItem(\n        'loggedHabitAppUser',\n        JSON.stringify(loggedInUser)\n      );\n      setSuccessMessage('Completion added!');\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 3000);\n      return;\n    } catch (error) {\n      console.log(error);\n      setErrorMessage('Adding completion failed.');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000);\n      return;\n    }\n  };\n\n  const handleCancelCompletion = async (habit: HabitType) => {\n    if (!loggedInUser) {\n      return setErrorMessage('User not logged in');\n    }\n\n    habit.completions.splice(habit.completions.length - 1, 1);\n\n    const updateHabit = {\n      ...habit,\n    };\n\n    try {\n      const responseData = await update(updateHabit);\n      setHabitsToShow(\n        habitsToShow.map((e) => (e.id === responseData.id ? responseData : e))\n      );\n      loggedInUser.habits = loggedInUser.habits.map((e) =>\n        e.id === responseData.id ? responseData : e\n      );\n      window.localStorage.setItem(\n        'loggedHabitAppUser',\n        JSON.stringify(loggedInUser)\n      );\n      setSuccessMessage('Completion cancelled!');\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 3000);\n      return;\n    } catch (error) {\n      console.log(error);\n      setErrorMessage('Adding completion failed.');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000);\n      return;\n    }\n  };\n\n  const habitById = (id: string) =>\n    habitsToShow.find((habit) => habit.id === id);\n\n  return (\n    <div>\n      <GlobalStyle />\n      <ErrSuccNotification\n        errorMessage={errorMessage}\n        successMessage={successMessage}\n      />\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <>\n                <Header\n                  loggedInUser={loggedInUser}\n                  handleLogout={handleLogout}\n                />\n                <Home\n                  habitsToShow={habitsToShow}\n                  handleCompletion={handleCompletion}\n                  handleCancelCompletion={handleCancelCompletion}\n                  toggleHabitForm={toggleHabitForm}\n                  showHabitForm={showHabitForm}\n                  loggedInUser={loggedInUser}\n                  handleHabitSubmit={handleHabitSubmit}\n                />\n              </>\n            )}\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            render={() =>\n              redirect ? (\n                <Redirect to={redirect} />\n              ) : (\n                <>\n                  <Header\n                    loggedInUser={loggedInUser}\n                    handleLogout={handleLogout}\n                  />\n                  <LoginSignUp\n                    handleLoginSubmit={handleLoginSubmit}\n                    handleSignUpSubmit={handleSignUpSubmit}\n                  />\n                </>\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={() =>\n              redirect ? (\n                <Redirect to={redirect} />\n              ) : (\n                <>\n                  <Header\n                    loggedInUser={loggedInUser}\n                    handleLogout={handleLogout}\n                  />\n                  <LoginSignUp\n                    handleLoginSubmit={handleLoginSubmit}\n                    handleSignUpSubmit={handleSignUpSubmit}\n                  />\n                </>\n              )\n            }\n          />\n          <Route\n            path=\"/habits/:id\"\n            render={({ match }) =>\n              redirect ? (\n                <Redirect to={redirect} />\n              ) : (\n                <>\n                  <Header\n                    loggedInUser={loggedInUser}\n                    handleLogout={handleLogout}\n                  />\n                  <HabitMoreInfo\n                    habit={habitById(match.params.id)}\n                    handleRemove={handleRemove}\n                  />\n                </>\n              )\n            }\n          />\n          <Route render={() => <Redirect to={{ pathname: '/' }} />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}